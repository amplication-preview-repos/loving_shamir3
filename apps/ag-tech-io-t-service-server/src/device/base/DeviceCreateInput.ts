/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { FarmCreateNestedManyWithoutDevicesInput } from "./FarmCreateNestedManyWithoutDevicesInput";
import { ValidateNested, IsOptional, IsString } from "class-validator";
import { Type } from "class-transformer";
import { SensorWhereUniqueInput } from "../../sensor/base/SensorWhereUniqueInput";
import { SensorCreateNestedManyWithoutDevicesInput } from "./SensorCreateNestedManyWithoutDevicesInput";

@InputType()
class DeviceCreateInput {
  @ApiProperty({
    required: false,
    type: () => FarmCreateNestedManyWithoutDevicesInput,
  })
  @ValidateNested()
  @Type(() => FarmCreateNestedManyWithoutDevicesInput)
  @IsOptional()
  @Field(() => FarmCreateNestedManyWithoutDevicesInput, {
    nullable: true,
  })
  farms?: FarmCreateNestedManyWithoutDevicesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  model?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => SensorWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => SensorWhereUniqueInput)
  @IsOptional()
  @Field(() => SensorWhereUniqueInput, {
    nullable: true,
  })
  sensor?: SensorWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => SensorCreateNestedManyWithoutDevicesInput,
  })
  @ValidateNested()
  @Type(() => SensorCreateNestedManyWithoutDevicesInput)
  @IsOptional()
  @Field(() => SensorCreateNestedManyWithoutDevicesInput, {
    nullable: true,
  })
  sensors?: SensorCreateNestedManyWithoutDevicesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  serialNumber?: string | null;
}

export { DeviceCreateInput as DeviceCreateInput };

/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { DataPointCreateNestedManyWithoutSensorsInput } from "./DataPointCreateNestedManyWithoutSensorsInput";
import { ValidateNested, IsOptional, IsString, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { DeviceWhereUniqueInput } from "../../device/base/DeviceWhereUniqueInput";
import { DeviceCreateNestedManyWithoutSensorsInput } from "./DeviceCreateNestedManyWithoutSensorsInput";
import { FarmWhereUniqueInput } from "../../farm/base/FarmWhereUniqueInput";
import { EnumSensorTypeField } from "./EnumSensorTypeField";

@InputType()
class SensorCreateInput {
  @ApiProperty({
    required: false,
    type: () => DataPointCreateNestedManyWithoutSensorsInput,
  })
  @ValidateNested()
  @Type(() => DataPointCreateNestedManyWithoutSensorsInput)
  @IsOptional()
  @Field(() => DataPointCreateNestedManyWithoutSensorsInput, {
    nullable: true,
  })
  dataPoints?: DataPointCreateNestedManyWithoutSensorsInput;

  @ApiProperty({
    required: false,
    type: () => DeviceWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => DeviceWhereUniqueInput)
  @IsOptional()
  @Field(() => DeviceWhereUniqueInput, {
    nullable: true,
  })
  device?: DeviceWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => DeviceCreateNestedManyWithoutSensorsInput,
  })
  @ValidateNested()
  @Type(() => DeviceCreateNestedManyWithoutSensorsInput)
  @IsOptional()
  @Field(() => DeviceCreateNestedManyWithoutSensorsInput, {
    nullable: true,
  })
  devices?: DeviceCreateNestedManyWithoutSensorsInput;

  @ApiProperty({
    required: false,
    type: () => FarmWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => FarmWhereUniqueInput)
  @IsOptional()
  @Field(() => FarmWhereUniqueInput, {
    nullable: true,
  })
  farm?: FarmWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumSensorTypeField,
  })
  @IsEnum(EnumSensorTypeField)
  @IsOptional()
  @Field(() => EnumSensorTypeField, {
    nullable: true,
  })
  typeField?: "Option1" | null;
}

export { SensorCreateInput as SensorCreateInput };
